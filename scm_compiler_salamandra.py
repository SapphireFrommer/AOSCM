import datetime
from net import *
from define_parameters import *

############################# main #############################
def main():
    scm = {}
    SCM_design(param,scm)
    write_verilog_file(param,scm)

########################## SCM design ##########################
def SCM_design(param, scm):
    ADDR_WIDTH = param['ADDR_WIDTH']
    # define the TOP module
    scm['TOP'] = Device(param['TOPLEVEL'])
    TOP = scm['TOP']
    for pin in ['CLK', 'WE', 'RE']:
        TOP.add_pin(Input(pin))
    for pin in ['WADDR', 'RADDR']:
        for i in range(ADDR_WIDTH):
            TOP.add_pin(Input(pin+str([i])))
    
    for i in range(param['DATA_WIDTH']):
            TOP.add_pin(Input('DIN'+str([i])))
    for i in range(param['DATA_WIDTH']):
            TOP.add_pin(Output('DOUT'+str([i])))

    # define a bitslice    
    scm['bitslice'] = Device('bitslice')
    bitslice = scm['bitslice']
    bitslice.add_pin(Input('DIN'))
    bitslice.add_pin(Output('DOUT'))

    for pin in ['WWL/DGWCLK', 'RWL']:
        for i in range(2**ADDR_WIDTH):
            bitslice.add_pin(Input(pin+str([i])))
            TOP.add_net(Net(pin+str([i])))
        


    # add the bitslices to TOP module
    for i in range(param['DATA_WIDTH']):
        # add nets for the bitslices
        TOP.add_net(Net('DIN'+str([i])))
        TOP.add_net(Net('DOUT'+str([i])))
        
        TOP.add_device(bitslice, 'bitslice'+str([i]))
        TOP.connect('DIN'+str([i]), 'bitslice'+str([i])+'.DIN')
        TOP.connect('DOUT'+str([i]), 'bitslice'+str([i])+'.DOUT')
        for pin in ['WWL/DGWCLK', 'RWL']:
            for j in range(2**ADDR_WIDTH):
                TOP.connect(pin+str([j]), 'bitslice'+str([i])+'.'+pin+str([j]))
            
        


###################### write verilog file ######################
def write_verilog_file(param,scm):
    verilog_file_name = "%s.post_py.v" %param['TOPLEVEL']
    tcl_file_name = '%s_cells_position.tcl' %param['TOPLEVEL']
    
    header_comment_text = []
    module_scm_text = scm['TOP'].write_verilog()

    header_comment(header_comment_text, param, module_scm_text)    
    
    verilog_file=open(verilog_file_name,'w')

    for line in header_comment_text:
        verilog_file.write(line)
    
    for module in scm.values():
        for line in module.write_verilog():
            verilog_file.write(line)
    
    verilog_file.close()

##################### write header comment #####################
def header_comment(text, param, module_scm_text):
    text.append('/*\n')
    text.append('###############################################################\n')
    text.append('#\tGenerated by:\t\tEnICS SCM Compiler v1.1\n')
    text.append('#\tGenerated on:\t\t'+str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))+'\n')
    text.append('#\tDesign:\t\t\t\t'+param['TOPLEVEL']+'\n')
    text.append('#\n')
    text.append('#\tDimensions:\n')
    text.append('#\tDATA WIDTH:\t\t\t'+str(param['DATA_WIDTH'])+'\n')
    text.append('#\tNUM ROWS:\t\t\t'+str(2**param['ADDR_WIDTH'])+'\n')
    text.append('#\n')
    text.append('#\tlines in lists:\n')    
    text.append('#\tmodule_scm_text:\t'+str(len(module_scm_text))+'\n')
    text.append('###############################################################\n')
    text.append('*/\n')    


if __name__ == '__main__':
    main()

